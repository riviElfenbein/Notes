//
//  NotesListTVCViewController.swift
//  Notes
//
//  Created by Rivi Elf on 28/12/2019.
//  Copyright (c) 2019 Rivi Elf. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit



class NotesListTVCViewController: UITableViewController
{
    
  var interactor: NotesListTVCBusinessLogic?
  var router: (NSObjectProtocol & NotesListTVCRoutingLogic & NotesListTVCDataPassing)?
  var viewModel:ListViewModel!
  var addButton: UIBarButtonItem? = nil
  var recycleButton: UIBarButtonItem? = nil

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = NotesListTVCInteractor()
    let presenter = NotesListTVCPresenter()
    let router = NotesListTVCRouter()
    
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    
    if let scene = segue.identifier {
        let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
        if let router = router, router.responds(to: selector) {
            router.perform(selector, with: segue)
        }
    }
    
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    interactor?.viewDidLoadRequest()
  }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        interactor?.ViewWillApearRequest()
    }
  
    @objc
    func insertNewObject(_ sender: Any) {
        interactor?.insertNewObjectPresed()
    }
    
    @objc func changeStatePressed (_ sender: Any){
        interactor?.changeStateRequest()
    }
  
    
    
   
    
}



