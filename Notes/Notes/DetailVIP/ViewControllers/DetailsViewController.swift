//
//  DetailsViewController.swift
//  Notes
//
//  Created by Rivi Elf on 01/01/2020.
//  Copyright (c) 2020 Rivi Elf. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit


class DetailsViewController: UIViewController
{
    
    @IBOutlet weak var contentTextView: UITextView!
    @IBOutlet weak var titleTextField: UITextField!
    @IBOutlet weak var idLabel: UILabel!
    
    let PLACEHOLDER_TEXT = "Enter note content here..."
    let PlaceholderColor = UIColor.lightGray
    let TextColor = UIColor.black
    
  var interactor: DetailsBusinessLogic?
  var router: (NSObjectProtocol & DetailsRoutingLogic & DetailsDataPassing)?
 
    
    @IBAction func save(_ sender: Any) {
        saveToDataService()
    }
    

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = DetailsInteractor()
    let presenter = DetailsPresenter()
    let router = DetailsRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
    
  // MARK: Actions
    // Assigned to all text fields for keyboard collapse
    @IBAction func resignKeyboardTextField(sender: UITextField) {
        sender.resignFirstResponder()
    }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()// Set up delegate for monitoring the text entered into the title and content fields
    titleTextField.delegate = self
    contentTextView.delegate = self
    contentTextView.text = PLACEHOLDER_TEXT
    contentTextView.textColor = PlaceholderColor

    // Configure the view if data is available
    interactor?.configureView()
    
    
  }
    
    private func saveToDataService() {
        let title = titleTextField.text?.trimmingCharacters(in: CharacterSet.whitespaces)
        let content = (contentTextView.textColor == PlaceholderColor) ? "" : contentTextView.text?.trimmingCharacters(in: CharacterSet.whitespaces)
        interactor?.noteChanged(title, content: content)
    }
  
}

